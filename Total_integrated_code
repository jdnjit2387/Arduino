//Drive Assist System

#include <AFMotor.h> //import your motor shield library
#define trigPin1 18 // define the pins of your sensor
#define echoPin1 19
#define trigPin2 15// define the pins of your sensor
#define echoPin2 14


 
AF_DCMotor motor1(1); // set up motors.
AF_DCMotor motor2(2);
AF_DCMotor motor3(3); // set up motors.
AF_DCMotor motor4(4);
 int lsensor,rsensor;
long duration, distance,distance2,distance1, RearSensor,FrontSensor,LeftSensor;
int m1_speed = 75+60;
  int m2_speed = 75+60;
  int m3_speed = 125+100;
  int m4_speed = 125+100;
  int x12;              //speed ratio 
  int x13;
  int data;
  int power=0;
  int flag=1;
  int parking=0;
  
void setup() {
  Serial.begin(9600); // begin serial communitication  
  Serial.println("Motor test!");
   pinMode(trigPin1, OUTPUT);// set the trig pin to output (Send sound waves)
  pinMode(echoPin1, INPUT);// set the echo pin to input (recieve sound waves)
  pinMode(trigPin2, OUTPUT);// set the trig pin to output (Send sound waves)
  pinMode(echoPin2, INPUT);// set the echo pin to input (recieve sound waves)
  pinMode(16,INPUT);
pinMode(17,INPUT);

  
}


void loop() 
{
  SonarSensor(trigPin1,echoPin1);
  FrontSensor = distance;
  distance1 = FrontSensor;
  SonarSensor(trigPin2, echoPin2);
  RearSensor = distance;
  distance2 = RearSensor;
 
if(parking==1)
{ 
  lsensor=digitalRead(16);
 rsensor=digitalRead(17);
  if((lsensor==HIGH)&&(rsensor==HIGH))
{
//both sensors on white
// go forward
 motor1.setSpeed(80); //set the speed of the motors, between 0-255
motor2.setSpeed (80); 
   motor3.setSpeed(80); //set the speed of the motors, between 0-255
motor4.setSpeed (80);
   motor1.run(FORWARD); //if there's no obstacle ahead, Go Forward! 
    motor2.run(FORWARD);  
    motor3.run(BACKWARD);  // Turn as long as there's an obstacle ahead.
    motor4.run (BACKWARD);
}
else if((lsensor==HIGH)&& (rsensor==LOW))
{
//right sensor on black line
// turn right
    motor3.setSpeed(200); //set the speed of the motors, between 0-255
    motor4.setSpeed (200); 
    motor3.run(BACKWARD);  // Turn as long as there's an obstacle ahead.
    motor4.run (BACKWARD);
     motor1.run(RELEASE);
    motor2.run(RELEASE);
}
else if((lsensor==LOW)&&(rsensor==HIGH))
{
//left sensor on black line
// turn left
    motor1.setSpeed(200); //set the speed of the motors, between 0-255
    motor2.setSpeed (200); 
    motor1.run(FORWARD);  // Turn as long as there's an obstacle ahead.
    motor2.run (FORWARD);
    motor3.run(RELEASE); //if there's no obstacle ahead, Go Forward! 
    motor4.run(RELEASE);  
}
else
{
 motor1.run(RELEASE);
    motor2.run(RELEASE);
      motor3.run(RELEASE); //set the speed of the motors, between 0-255
      motor4.run(RELEASE);
}

}
  if(distance1 < 25 && flag==1)
  {
    motor1.run(RELEASE); 
    motor2.run(RELEASE);
    motor3.run(RELEASE); 
    motor4.run(RELEASE);
  }

  if(distance2 < 25 && flag==2)
  {
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE); 
    motor4.run(RELEASE);
}


Serial.println ( distance1);
Serial.println ( distance2);
if (Serial.available() > 0)
{
 
 data = Serial.read();

switch (data) {
case '1':                
flag=1;parking=0;
if (distance1 < 25.0) 
{   
 
  Serial.println ("Close Obstacle detected!" );
  Serial.println ("Obstacle Details:");
  Serial.print ("Distance From Robot is " );
  Serial.println("front distance");
  Serial.println ( distance1);
  Serial.print ( " CM!");
   motor1.run(RELEASE);
   motor2.run(RELEASE);
   motor3.run(RELEASE);
   motor4.run(RELEASE);
 }

else                
   {    
    if(power==0)            //4 wheel drive: go forward
     { 
      Serial.println ("No obstacle detected. going forward");
      motor1.setSpeed(m1_speed); 
      motor2.setSpeed (m2_speed); 
      motor3.setSpeed(m3_speed); 
      motor4.setSpeed (m4_speed);
      motor1.run(FORWARD); 
      motor2.run(FORWARD);  
      motor3.run(BACKWARD);  
      motor4.run (BACKWARD);
     }
    else                  //2 wheel drive: go forward
     {
        motor1.run(RELEASE);
        motor4.run(RELEASE);
        
        motor2.setSpeed(m2_speed); 
        motor3.setSpeed(m3_speed); 
        motor2.run(FORWARD);  
        motor3.run(BACKWARD);
     }
   }
  break;
  
case '2' :                //Backward
flag=2;parking=0;
if (distance2 < 25.0) 
{   
  Serial.println ("Close Obstacle detected!" );
  Serial.println ("Obstacle Details:");
  Serial.print ("Distance From Robot is " );
  Serial.println("Back distance");
  Serial.println ( distance2);
  Serial.print ( " CM!");
   motor1.run(RELEASE);
   motor2.run(RELEASE);
   motor3.run(RELEASE);
   motor4.run(RELEASE);
 }

else
   {    
    if(power==0)    //4wheel drive: go backward
    {
        Serial.println ("No obstacle detected. going backward");
        motor1.setSpeed(m1_speed); 
        motor2.setSpeed (m2_speed); 
        motor3.setSpeed(m3_speed); 
        motor4.setSpeed (m4_speed);
        motor1.run(BACKWARD); 
        motor2.run(BACKWARD);  
        motor3.run(FORWARD);  
        motor4.run (FORWARD);
    }
    else
      {
        motor1.run(RELEASE);
        motor4.run(RELEASE);
        
        motor2.setSpeed(m2_speed); 
        motor3.setSpeed(m3_speed); 
        motor2.run(BACKWARD);  
        motor3.run(FORWARD);
      }
   }
break;

case '3' :
flag=1;parking=0;
if (distance1 < 25.0) 
{   
  Serial.println ("Close Obstacle detected!" );
  Serial.println ("Obstacle Details:");
  Serial.print ("Distance From Robot is " );
  Serial.println("front distance");
  Serial.println ( distance1);
  Serial.print ( " CM!");
   motor1.run(RELEASE);
   motor2.run(RELEASE);
   motor3.run(RELEASE);
   motor4.run(RELEASE);
 }
else
{
  if(power==0)              //4 wheel drive
  {
      motor1.setSpeed(255); 
      motor2.setSpeed (255); 
      motor1.run(FORWARD);  
      motor2.run (FORWARD);
      motor3.run(RELEASE); 
      motor4.run(RELEASE);
  }
  else                    //2 wheel drive 
   {
      motor1.setSpeed(255); 
      motor1.run(FORWARD); 
      
      motor2.run (RELEASE);
      motor3.run(RELEASE); 
      motor4.run(RELEASE);
   }  
}
break;

case '4' : 
flag=1;parking=0;
if (distance1 < 25.0) 
 {   
  Serial.println ("Close Obstacle detected!" );
  Serial.println ("Obstacle Details:");
  Serial.print ("Distance From Robot is " );
  Serial.println("front distance");
  Serial.println ( distance1);
  Serial.print ( " CM!");
   motor1.run(RELEASE);
   motor2.run(RELEASE);
   motor3.run(RELEASE);
   motor4.run(RELEASE);
 }
else
{
  if(power==0)                  //4 wheel drive
  {
    motor3.setSpeed(255); 
    motor4.setSpeed (255); 
    motor3.run(BACKWARD);  
    motor4.run (BACKWARD);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
  }
  else                          //2 wheel drive
   {
    motor4.setSpeed (255); 
    motor4.run(BACKWARD);  

    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
   }
}
     break;

case '5': 
parking=0;
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE); 
    motor4.run(RELEASE);
 break;

case '6': flag=1;
parking=1;
/*
lsensor=digitalRead(16);
 rsensor=digitalRead(17);
if((lsensor==HIGH)&&(rsensor==HIGH))
{
//both sensors on white
// go forward
 motor1.setSpeed(80); //set the speed of the motors, between 0-255
motor2.setSpeed (80); 
   motor3.setSpeed(80); //set the speed of the motors, between 0-255
motor4.setSpeed (80);
   motor1.run(FORWARD); //if there's no obstacle ahead, Go Forward! 
    motor2.run(FORWARD);  
    motor3.run(BACKWARD);  // Turn as long as there's an obstacle ahead.
    motor4.run (BACKWARD);
}
else if((lsensor==HIGH)&& (rsensor==LOW))
{
//right sensor on black line
// turn right
    motor3.setSpeed(200); //set the speed of the motors, between 0-255
    motor4.setSpeed (200); 
    motor3.run(BACKWARD);  // Turn as long as there's an obstacle ahead.
    motor4.run (BACKWARD);
     motor1.run(RELEASE);
    motor2.run(RELEASE);
}
else if((lsensor==LOW)&&(rsensor==HIGH))
{
//left sensor on black line
// turn left
    motor1.setSpeed(200); //set the speed of the motors, between 0-255
    motor2.setSpeed (200); 
    motor1.run(FORWARD);  // Turn as long as there's an obstacle ahead.
    motor2.run (FORWARD);
    motor3.run(RELEASE); //if there's no obstacle ahead, Go Forward! 
    motor4.run(RELEASE);  
}
else
{
 motor1.run(RELEASE);
    motor2.run(RELEASE);
      motor3.run(RELEASE); //set the speed of the motors, between 0-255
      motor4.run(RELEASE);
}

*/

  break;

case '7':parking=0;
      if(power==0)
        power=1;
      else if(power==1)
        power=0;
break;
 
default : break;

}
}

  }  
  
 


void SonarSensor(int trigPin,int echoPin)
{
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
duration = pulseIn(echoPin, HIGH);
distance = (duration/2) / 29.1;
 
}


void line_follower()
{ 
     lsensor=digitalRead(16);
rsensor=digitalRead(17);
if((lsensor==HIGH)&&(rsensor==HIGH))
{
//both sensors on white
// go forward
 motor1.setSpeed(135); //set the speed of the motors, between 0-255
motor2.setSpeed (135); 
   motor3.setSpeed(225); //set the speed of the motors, between 0-255
motor4.setSpeed (225);
   motor1.run(FORWARD); //if there's no obstacle ahead, Go Forward! 
    motor2.run(FORWARD);  
    motor3.run(BACKWARD);  // Turn as long as there's an obstacle ahead.
    motor4.run (BACKWARD);
}
else if((lsensor==HIGH)&& (rsensor==LOW))
{
//right sensor on black line
// turn right
    motor3.setSpeed(200); //set the speed of the motors, between 0-255
    motor4.setSpeed (200); 
    motor3.run(BACKWARD);  // Turn as long as there's an obstacle ahead.
    motor4.run (BACKWARD);
     motor1.run(RELEASE);
    motor2.run(RELEASE);
}
else if((lsensor==LOW)&&(rsensor==HIGH))
{
//left sensor on black line
// turn left
    motor1.setSpeed(200); //set the speed of the motors, between 0-255
    motor2.setSpeed (200); 
    motor1.run(FORWARD);  // Turn as long as there's an obstacle ahead.
    motor2.run (FORWARD);
    motor3.run(RELEASE); //if there's no obstacle ahead, Go Forward! 
    motor4.run(RELEASE);  
}
else
{
 motor1.run(RELEASE);
    motor2.run(RELEASE);
      motor3.run(RELEASE); //set the speed of the motors, between 0-255
      motor4.run(RELEASE);
}


}
